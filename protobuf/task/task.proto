syntax = "proto3";

package synoday.task;

option go_package = "github.com/synoday/golang/protogen/task";

// Task holds task information.
message Task {
  string id           = 1;

  string task_name    = 2;

  string url          = 3;

  string tags         = 4;

  string notes        = 5;

  string notes_md     = 6;

  string date         = 7;

  bool completed      = 8;
}

// ResponseStatus is response status enum.
enum ResponseStatus {
  UNKNOWN                 = 0x0;
  SUCCESS                 = 0x1;
  INTERNAL_ERROR          = 0x2;

  TASK_INVALID_TASK_NAME  = 0x10;
  TASK_NOT_FOUND          = 0x11;
}

// TodayTasksRequest holds information which can be used
// to filter today task list.
message TodayTasksRequest {
  string task_name      = 1;

  string tags           = 2;
}

// TodayTasksResponse holds today task list.
message TodayTasksResponse {
    repeated Task tasks   = 1;

    ResponseStatus status = 2;
}

// AddRequest holds information of task which is going to be added.
message AddRequest {
  Task task = 1;
}

// AddResponse holds newly added task id.
message AddResponse {
  string id             = 1;

  ResponseStatus status = 2;
}

// RemoveRequest holds task id which is going to be deleted.
message RemoveRequest {
  string id = 1;
}

// RemoveResponse holds remove task response status.
message RemoveResponse {
  ResponseStatus status = 1;
}

// TaskService provides method for task operation.
service TaskService {
  rpc TodayTasks(TodayTasksRequest) returns(TodayTasksResponse) {}

  rpc AddTask(AddRequest) returns(AddResponse) {}

  rpc RemoveTask(RemoveRequest) returns(RemoveResponse) {}
}
